version: "3.8"

services:
  app:
    restart: unless-stopped
    build: .
    env_file:
      - ./.env
    ports:
      - "8000:80"
    volumes:
      - .:/app:z
      - ./.cache:/root/.cache
    entrypoint: ["/bin/bash", "/app/docker-entrypoint.prod.sh"]
    networks:
      - proxy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hiilikartta-data-service.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.hiilikartta-data-service.entrypoints=websecure"
      - "traefik.http.routers.hiilikartta-data-service.tls.certresolver=myresolver"
      - "traefik.http.services.hiilikartta-data-service.loadbalancer.server.port=80"


  worker:
    build: .
    image: hiilikartta-data-service
    command: poetry run saq --workers 25 app.saq_worker.settings --web
    env_file:
      - ./.env
    volumes:
      - ./project:/usr/src/app
      - .:/app:z
      - ./.cache:/root/.cache
    ports:
      - "127.0.0.1:${SAQ_WEB_PORT}:8080"
    networks:
      - proxy-net
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_started
    restart: unless-stopped

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - ${REDIS_DATA_PATH}:/data
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - proxy-net

  pgbouncer-gis:
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    environment:
      DB_HOST: ${GIS_PG_HOST}
      DB_PORT: ${GIS_PG_PORT}
      DB_USER: ${GIS_PG_USER}
      DB_PASSWORD: ${GIS_PG_PASSWORD}
      DB_NAME: ${GIS_PG_DB}
      AUTH_TYPE: scram-sha-256
      POOL_MODE: session
      MAX_CLIENT_CONN: 50
      DEFAULT_POOL_SIZE: 20
      SERVER_RESET_QUERY: "DISCARD ALL"
    networks:
      - proxy-net

  pgbouncer-state:
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    environment:
      DB_HOST: ${STATE_PG_HOST}
      DB_PORT: ${STATE_PG_PORT}
      DB_USER: ${STATE_PG_USER}
      DB_PASSWORD: ${STATE_PG_PASSWORD}
      DB_NAME: ${STATE_PG_DB}
      AUTH_TYPE: scram-sha-256
      POOL_MODE: session
      MAX_CLIENT_CONN: 50
      DEFAULT_POOL_SIZE: 20
      SERVER_RESET_QUERY: "DISCARD ALL"
    networks:
      - proxy-net

  autoheal:
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - DOCKER_SOCK=/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - proxy-net

networks:
  proxy-net:
    external: true
